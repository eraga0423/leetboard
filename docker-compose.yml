version: "3.7"

services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
    volumes:
      - ./minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

  app:
    build: .
    ports:
      - "${REST_API_PORT}:${REST_API_PORT}"
    depends_on:
      - postgres
      - minio
    environment:
      - PG_HOST=postgres
      - PG_PORT=${PG_PORT}
      - PG_NAME=${PG_NAME}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_API_PORT=${MINIO_API_PORT}
      - REST_API_HOST=${REST_API_HOST}
      - REST_API_PORT=${REST_API_PORT}
      - REST_RICK_HOST=${REST_RICK_HOST}
      - REST_RICK_PORT=${REST_RICK_PORT}
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://postgres:${PG_PORT} || exit 1"]
      interval: 10s
      retries: 5
      timeout: 5s


  postgres:
    image: postgres:16-alpine
    container_name: postgres
    ports:
      - "${PG_PORT}:${PG_PORT}" # Убедитесь, что порт правильный
    environment:
      POSTGRES_DB: "${PG_NAME}"
      POSTGRES_USER: "${PG_USER}"
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    profiles: [ "tools" ]
    entrypoint: [
      "migrate",
      "-path",
      "/migrations",
      "-database",
      "postgres://${PG_USER}:${PG_PASSWORD}@postgres:5432/${PG_NAME}?sslmode=disable",
      "up"
    ]
    volumes:
      - ./internal/postgres/migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata:
  miniodata:
